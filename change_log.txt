***** CHANGELOG *****

-> 02/06/2017 (branch: feature_add_version_incrementation)
	- added main.c, common.h, inc_bld_str.sh, Makefile, and bld_num.txt to project
	- added feature to increment build number everytime code is compiled
	- added feature to main.c to display software version number when started
	- deleted "feature_add_version_incrementation" branch after merging it to "develop" branch
	
-> 02/06/2017 (branch: feature_verify_input_string)
	- added change_log.txt, rmn_calc.c, rmn_calc.h, test_rmn_calc.c, and test_rmn_calc.h to project
	- edited Makefile to include necessary files (rmn_calc.c, test_rmn_calc.c)
	- verified regex works for case insensitivity
	- verified regex matches for 0 - 3 'i' characters and fails if there are more
	- verified regex matches for 0 - 1 'v' characters and fails if there are more
	- verified regex matches for 'vi' character combination and fails if 'v' comes after 'i' ('viv')
	
-> 02/07/2017 (branch: feature_verify_input_string)
	- removed file path variable from inc_bld_str.sh since it will be different on client machines
	- verified regex matches for 0 - 3 'x' characters and fails if there are more
	- verified regex matches for 0 - 1 'l' characters and fails if there are more
	- verified regex matches for 0 - 3 'c' characters and fails if there are more
	- verified regex matches for 0 - 1 'd' characters and fails if there are more
	- verified regex matches for 0 - n 'm' characters
	- verified regex matches edge conditions for 'v' 'i' combinations and 'x' 'i' combinations
	- verified regex matches edge conditions for 'iv' using edge conditions
	- verified regex matches edge conditions for 'ix'

-> 02/08/2017 (branch: feature_verify_input_string)
	- verified regex matches edge conditions for 'xl'
	- verified regex matches edge conditions for 'xc'
	- verified regex matches edge conditions for 'cd'
	- verified regex matches edge conditions for 'cm'
	- merging this branch back into develop in order to work on the next feature:
		- converting integers into roman numerals
		- this will allow for full testing of string verification in the long run

-> 02/08/2017 (branch: feature_encode_int_to_roman_numeral)
	- created a new branch in order to take an integer and create a roman numeral string
	- renamed rmn_calc.c to test_rmn_calc.c to differentiate between different tests
	- added test_rmn_calc_enc_dcd.c to project for encoding and decoding roman numeral strings
	- verified encoding to 'I' for edge conditions 1 and 3
	- verified encoding to 'IV' for 4
	- verified encoding to 'V' for edge conditions 5 and 8
	- verified encoding to 'IX' for 9
	- verified encoding to 'X' for edge conditions 10 and 39
	- verified encoding to 'XL' for edge conditions 40 and 49
	- verified encoding to 'L' for edge conditions 50 and 89
	- verified encoding to 'XC' for edge conditions 90 and 99
	- verified encoding to 'C' for edge conditions 100 and 399
	- verified encoding to 'CD' for edge conditions 400 and 499
	